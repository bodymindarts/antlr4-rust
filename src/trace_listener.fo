//package antlr
//
//import "fmt"
//
//pub struct TraceListener {
//	parser *BaseParser
//}
//
//impl TraceListener {ยง//  pub fn new(parser *BaseParser) -> *TraceListener {
//	tl := new(TraceListener)
//	tl.parser = parser
//	return tl
//}
//
//pub fn VisitErrorNode(_ ErrorNode) -> {
//}
//
//pub fn EnterEveryRule(ctx ParserRuleContext) -> {
//	fmt.Println("enter   " + t.parser.GetRuleNames()[ctx.GetRuleIndex()] + ", LT(1)=" + t.parser.input.LT(1).GetText())
//}
//
//pub fn VisitTerminal(node TerminalNode) -> {
//	fmt.Println("consume " + fmt.Sprint(node.GetSymbol()) + " rule " + t.parser.GetRuleNames()[t.parser.ctx.GetRuleIndex()])
//}
//
//pub fn ExitEveryRule(ctx ParserRuleContext) -> {
//	fmt.Println("exit    " + t.parser.GetRuleNames()[ctx.GetRuleIndex()] + ", LT(1)=" + t.parser.input.LT(1).GetText())
//}
