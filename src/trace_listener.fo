//package antlr
//
//import "fmt"
//
//pub struct TraceListener {
//  parser: *BaseParser
//}
//
//impl TraceListener {ยง//  fn new(&self, parser *BaseParser) -> *TraceListener {
//  let tl = new(TraceListener);
//  tl.parser = parser
//  return tl
//}
//
//pub fn VisitErrorNode(&self, _: ErrorNode) {
//}
//
//pub fn EnterEveryRule(&self, ctx: ParserRuleContext) {
//  fmt.Println("enter   " + self.parser.GetRuleNames()[ctx.GetRuleIndex()] + ", LT(1)=" + self.parser.input.LT(1).GetText())
//}
//
//pub fn VisitTerminal(&self, node: TerminalNode) {
//  fmt.Println("consume " + fmt.Sprint(node.GetSymbol()) + " rule " + self.parser.GetRuleNames()[self.parser.ctx.GetRuleIndex()])
//}
//
//pub fn ExitEveryRule(&self, ctx: ParserRuleContext) {
//  fmt.Println("exit    " + self.parser.GetRuleNames()[ctx.GetRuleIndex()] + ", LT(1)=" + self.parser.input.LT(1).GetText())
//}
