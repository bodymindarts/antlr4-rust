//package antlr
//
//import "fmt"
//
//pub struct TraceListener {
//  parser: *BaseParser
//}
//
//impl TraceListener {ยง//  fn new(&self, parser *BaseParser) -> *TraceListener {
//  let tl = new(TraceListener);
//  tl.parser = parser
//  return tl
//}
//
//pub fn visit_error_node(&self, _: ErrorNode) {
//}
//
//pub fn enter_every_rule(&self, ctx: ParserRuleContext) {
//  fmt.Println("enter   " + self.parser.get_rule_names()[ctx.get_rule_index()] + ", LT(1)=" + self.parser.input.l_t(1).get_text())
//}
//
//pub fn visit_terminal(&self, node: TerminalNode) {
//  fmt.Println("consume " + fmt.Sprint(node.get_symbol()) + " rule " + self.parser.get_rule_names()[self.parser.ctx.get_rule_index()])
//}
//
//pub fn exit_every_rule(&self, ctx: ParserRuleContext) {
//  fmt.Println("exit    " + self.parser.get_rule_names()[ctx.get_rule_index()] + ", LT(1)=" + self.parser.input.l_t(1).get_text())
//}
